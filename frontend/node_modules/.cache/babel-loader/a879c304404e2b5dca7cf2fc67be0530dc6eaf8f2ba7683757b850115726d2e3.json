{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include the auth token in requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authApi = {\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  register: userData => api.post('/auth/register', userData),\n  getProfile: () => api.get('/users/me')\n};\n\n// Problems API\nexport const problemsApi = {\n  getStats: () => api.get('/problems/stats'),\n  getRecentActivity: () => api.get('/problems/activity'),\n  getLeaderboard: () => api.get('/leaderboard')\n};\n\n// User API\nexport const userApi = {\n  updateProfile: (userId, data) => api.put(`/users/${userId}`, data),\n  changePassword: data => api.post('/users/change-password', data)\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","authApi","login","email","password","post","register","userData","getProfile","get","problemsApi","getStats","getRecentActivity","getLeaderboard","userApi","updateProfile","userId","data","put","changePassword"],"sources":["E:/DevTrail/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor to include the auth token in requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authApi = {\n  login: (email, password) => api.post('/auth/login', { email, password }),\n  register: (userData) => api.post('/auth/register', userData),\n  getProfile: () => api.get('/users/me'),\n};\n\n// Problems API\nexport const problemsApi = {\n  getStats: () => api.get('/problems/stats'),\n  getRecentActivity: () => api.get('/problems/activity'),\n  getLeaderboard: () => api.get('/leaderboard'),\n};\n\n// User API\nexport const userApi = {\n  updateProfile: (userId, data) => api.put(`/users/${userId}`, data),\n  changePassword: (data) => api.post('/users/change-password', data),\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,OAAO,GAAG;EACrBC,KAAK,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAKlB,GAAG,CAACmB,IAAI,CAAC,aAAa,EAAE;IAAEF,KAAK;IAAEC;EAAS,CAAC,CAAC;EACxEE,QAAQ,EAAGC,QAAQ,IAAKrB,GAAG,CAACmB,IAAI,CAAC,gBAAgB,EAAEE,QAAQ,CAAC;EAC5DC,UAAU,EAAEA,CAAA,KAAMtB,GAAG,CAACuB,GAAG,CAAC,WAAW;AACvC,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG;EACzBC,QAAQ,EAAEA,CAAA,KAAMzB,GAAG,CAACuB,GAAG,CAAC,iBAAiB,CAAC;EAC1CG,iBAAiB,EAAEA,CAAA,KAAM1B,GAAG,CAACuB,GAAG,CAAC,oBAAoB,CAAC;EACtDI,cAAc,EAAEA,CAAA,KAAM3B,GAAG,CAACuB,GAAG,CAAC,cAAc;AAC9C,CAAC;;AAED;AACA,OAAO,MAAMK,OAAO,GAAG;EACrBC,aAAa,EAAEA,CAACC,MAAM,EAAEC,IAAI,KAAK/B,GAAG,CAACgC,GAAG,CAAC,UAAUF,MAAM,EAAE,EAAEC,IAAI,CAAC;EAClEE,cAAc,EAAGF,IAAI,IAAK/B,GAAG,CAACmB,IAAI,CAAC,wBAAwB,EAAEY,IAAI;AACnE,CAAC;AAED,eAAe/B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}